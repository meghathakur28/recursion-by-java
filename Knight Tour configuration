public class knighttour {
    public static void main(String[] args)
    {
           int[][] grid = new int[3][3];
           grid[0][0]=0;
           grid[0][1]=3;
           grid[0][2]=6;
           grid[1][0]=5;
           grid[1][1]=8;
           grid[1][2]=1;
           grid[2][0]=2;
           grid[2][1]=7;
           grid[2][2]=4;
           System.out.println(helper(grid,0,0,0));
    }
    public static boolean helper(int[][] grid,int row,int col,int num)
    {
        if(grid[row][col]== (grid.length*grid.length)-1)
        {
            return true;
        }
        int i=row-2;
        int j=col+1;
        if(i>=0&&j<grid.length&&grid[i][j]==num+1)
        {
            return helper(grid,i,j,num+1);
        }
        i=row-2;
        j=col-1;
        if(i>=0&&j>=0&&grid[i][j]==num+1)
        {
            return helper(grid,i,j,num+1);
        }
        i=row+2;
        j=col+1;
        if(i<grid.length&&j<grid.length&&grid[i][j]==num+1)
        {
            return helper(grid,i,j,num+1);
        }
        i=row+2;
        j=col-1;
        if(i<grid.length&&j>=0&&grid[i][j]==num+1)
        {
            return helper(grid,i,j,num+1);
        }
        i=row-1;
        j=col-2;
        if(i>=0&&j>=0&&grid[i][j]==num+1)
        {
            return helper(grid,i,j,num+1);
        }
        i=row+1;
        j=col-2;
        if(i<grid.length&&j>=0&&grid[i][j]==num+1)
        {
            return helper(grid,i,j,num+1);
        }
        i=row-1;
        j=col+2;
        if(i>=0&&j<grid.length&&grid[i][j]==num+1)
        {
            return helper(grid,i,j,num+1);
        }
        i=row+1;
        j=col+2;
        if(i<grid.length&&j<grid.length&&grid[i][j]==num+1)
        {
            return helper(grid,i,j,num+1);
        }
        return false;
    }
    
}
